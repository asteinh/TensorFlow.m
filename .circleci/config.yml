version: 2.1

executors:
  tensorflowm-ci:
    docker:
      - image: asteinh/docker:tensorflowm-ci

default-config: &config
  executor: tensorflowm-ci

# FILTERS FOR WORKFLOWS
develop: &develop-filter
  filters:
    branches:
      ignore:
        - master
        - gh-pages
master: &master-filter
  filters:
    branches:
      only: master
deploy: &deploy-filter
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

################################################################################
# JOBS
################################################################################
jobs:
  # BUILD DOCKER IMAGES
  build-images:
    <<: *config
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          cd .. && mkdir -p images
          cp project/.circleci/docker/octave5/Dockerfile .
          export IMAGENAME=tensorflowm-octave5:${CIRCLE_SHA1:0:7}
          docker build -t $IMAGENAME .
          docker save --output images/octave5.tar $IMAGENAME
          echo $IMAGENAME > images/octave5
          rm Dockerfile
      - persist_to_workspace:
          root: ~/
          paths:
            - images/

  # RUN UNIT TESTS, needs to run on 'machine' to be able to mount repository
  unit-tests:
    <<: *config
    # machine:
    #   image: circleci/classic:latest
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/
      - run: |
          cat ../images/octave5
          docker load --input ../images/octave5.tar
          docker run --rm octave5 /bin/bash -c "cd tests && ./setup_unittests.sh"
          docker exec octave5 /bin/bash -c "octave-cli --eval \"s = run_unittests(); exit(s);\""
          docker stop octave5 && docker rm octave5
      - persist_to_workspace:
          root: ~/project/
          paths:
            - tests/*

  # UPLOAD COVERAGE REPORT
  coverage:
    <<: *config
    steps:
      - attach_workspace:
          at: ~/project/
      - run: |
          ls -l
          ls -l tests/

  # DEPLOY DOCKER IMAGES
  deploy-images:
    <<: *config
    steps:
      - attach_workspace:
          at: ~/
      - run: ls -l

  # BUILD DOCS
  build-docs:
    <<: *config
    steps:
      - run: |
          ls -l
          mkdir -p docs && touch docs/test-doc.md
      - persist_to_workspace:
          root: ~/
          paths:
            - docs/*

  # DEPLOY DOCS TO GITHUB PAGES
  deploy-docs:
    <<: *config
    steps:
      # - add_ssh_keys:
      #     fingerprints:
      #       - "fb:e4:cf:7b:a9:c3:73:e1:a1:bf:bd:31:52:9f:5c:f0"
      - checkout
      - attach_workspace:
          at: ~/
      - run: |
          ls -l
          ls -l docs/
#          gh-pages --dotfiles --message "Update pages" --dist docs/build/html

################################################################################
# WORKFLOWS
################################################################################
workflows:
  version: 2
  # DEVELOPMENT WORKFLOW: BUILD & TEST
  develop:
    jobs:
      - build-images:
          <<: *develop-filter
      - unit-tests:
          requires:
            - build-images
      - build-docs:
          requires:
            - unit-tests

  # MASTER WORKFLOW: BUILD, TEST, DOCUMENT
  master:
    jobs:
      - build-images:
          <<: *master-filter
      - unit-tests:
          requires:
            - build-images
      - coverage:
          requires:
            - unit-tests
      - build-docs:
          requires:
            - unit-tests
      - deploy-docs:
          requires:
            - build-docs

  # RELEASE WORKFLOW: BUILD, TEST, DEPLOY
  # seems the tag-filter needs to be applied for every job
  deploy:
    jobs:
      - build-images:
          <<: *deploy-filter
      - unit-tests:
          <<: *deploy-filter
          requires:
            - build-images
      - deploy-images:
          <<: *deploy-filter
          requires:
            - unit-tests
